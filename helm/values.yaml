global:
  cloudProvider: {}
  tracing: {}
  metrics: {}
  environment: {}

enabled: true
environment: "development"
replicaCount: 1
initialDelaySeconds: 60
nodePort: 30030 #for minikube deployment only

cloudProvider:
  dockerRegistryUrl: my-registry-url.io
  imagePullSecretName: 'my-registry-secret'
  flavor: openshift

caSecretName: ''
caKey: 'ca.crt'

image:
  repository: "tiles-splitter"
  tag: "latest"

storage:
  internalPvc:
    create: false
    name: "internal-pvc"
    mountPath: "/layerSources"
  internalPv:
    name: "internal-pv"
    directory: "/layerSources"

env:
  port: 8080
  targetPort: 8080
  protocol: TCP
  logLevel: info
  logPrettyPrintEnabled: false
  responseCompressionEnabled: true
  requestPayloadLimit: 1mb
  tracing:
    enabled: false
    url: "http://localhost:55681/v1/trace"
  metrics:
    enabled: false
    url: "http://localhost:55681/v1/metrics"
  attempts: 3
  tiles:
    path: /layerSources
    format: png
    uploadBatchSize: 100
    sigIsNeeded: false
  queue:
    jobManagerBaseUrl: "http://localhost:8082"
    heartbeatManagerBaseUrl: "http://localhost:8085"
    dequeueIntervalMs: 1000
    heartbeatIntervalMs: 300
    jobType: "Sync"
    tilesTaskType: "tilesSync"
    tocTaskType: "tocSync"
  storageProvider: "FS"
  S3:
    endpoint: "http://localhost:9000"
    bucket: "mapping-images"
    forcePathStyle: true
    secret:
      name: raster-tiles-s3-secret
      createSecret: false # secret should be created on higher level for deployments with multiple services
      accessKeyId: # used only when creating secret
      secretAccessKey: # used only when creating secret
resources:
  enabled: true
  value:
    limits:
      cpu: "100m"
      memory: "128Mi"
    requests:
      cpu: "100m"
      memory: "128Mi"

