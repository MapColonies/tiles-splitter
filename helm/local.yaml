global:
  cloudProvider: {}
  tracing: {}
  metrics: {}
  environment: {}

enabled: true
environment: "development"
replicaCount: 1
initialDelaySeconds: 60
nodePort: 30030 #for minikube deployment only

cloudProvider:
  dockerRegistryUrl: 10.45.130.11:5000
  imagePullSecretName: acr-registry
  flavor: openshift

caSecretName: ''
caKey: 'ca.crt'

image:
  repository: "tiles-splitter"
  tag: "latest"

storage:
  ingestionSourcePvc:
    enabled: true
    name: ingestion-source-pvc
    subPath: ingestion-source
  internalPvc:
    create: false
    name: "internal-pvc"
    tilesSubPath: tiles
env:
  port: 8080
  targetPort: 8080
  protocol: TCP
  logLevel: info
  logPrettyPrintEnabled: false
  responseCompressionEnabled: true
  requestPayloadLimit: 1mb
  tracing:
    enabled: false
    url: "http://localhost:55681/v1/trace"
  metrics:
    enabled: false
    url: "http://localhost:55681/v1/metrics"
  splitAttempts: 3
  sourceMountPath: /layerSources
  vrt:
    nodata: "0"
    outputSRS: "EPSG:4326"
    resampling: "average"
    addAlpha: true
  generateTiles:
    resampling: "average"
    profile: "geodetic"
    srcnodata: "0"
    verbose: true
  queue:
    jobManagerBaseUrl: "http://job-manager-job-manager"
    heartbeatManagerBaseUrl: "http://job-manager-heartbeat-manager"
    dequeueIntervalMs: 1000
    heartbeatIntervalMs: 300
    jobType: "Ingestion"
    taskType: "splitTilesSync"
  storageProvider: "S3"
  S3:
    endpoint: "10.45.130.11:9000"
    bucket: "dtm"
    forcePathStyle: true
    sslEnabled: false
    virtualHosting: false
    secret:
      name: raster-tiles-s3-secret 
      createSecret: true # secret should be created on higher level for deployments with multiple services
      accessKeyId: minioadmin # used only when creating secret
      secretAccessKey: minioadmin # used only when creating secret
resources:
  enabled: true
  value:
    limits:
      cpu: "100m"
      memory: "128Mi"
    requests:
      cpu: "100m"
      memory: "128Mi"

